@model List<Person>

@{
    ViewData["Title"] = "Persons List";
       // Pass a new Person instance to the partial view
    var newPerson = new Person();
    @await Html.PartialAsync("Create", newPerson)
}

<h2>Persons </h2>
<br/>
<h5>Person Management is the process of efficiently handling and organizing individual information.
    It involves tasks such as adding, editing, viewing,
    and deleting records while ensuring data accuracy and accessibility.
    It’s commonly used in systems like employee databases, customer directories,
    or membership tracking tools</h5>
<br/>
<div class="d-flex justify-content-between">
    <div class="col-xs-6 text-left">
        <a asp-action="Create" class="btn btn-primary" data-toggle="modal" data-target="#Create">
            Create New Person
        </a>
    </div>
    <div class="col-xs-6 text-right">
        <form class="d-flex" asp-action="Index" asp-controller="Persons">
            <input name="SearchString" type="search" placeholder="Search" aria-label="Search" class="btn btn-light me-1" />
            <input type="submit" value="Search" class="btn btn-primary me-1" />
            <a asp-action="Index" class="btn btn-secondary me-1">Back to List</a>
        </form>
    </div>
</div>
<!-- Alerts Section -->
<div id="alert-container" class="mt-3">
    <div id="successAlert" class="alert alert-success d-none" role="alert">
        Success! Your action was completed.
    </div>
    <div id="failureAlert" class="alert alert-danger d-none" role="alert">
        Error! Something went wrong.
    </div>
</div>
<table class="table table-striped">
    <thead>
        <tr>
            <th>ID Number</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th style="text-align: right;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model)
        {
            <tr>
                <td>
                    @person.id_number.Substring(0, 2)XX @person.id_number.Substring(4, person.id_number.Length - 6)XX
                </td>
                <td>@person.Name</td>
                <td>@person.Surname</td>
                <td style="text-align: right;">
                    <button class="btn  btn-danger" data-toggle="modal" data-target=@("#Delete-" + person.Code) data-url="@Url.Action($"Delete/{person.Code}")">
                       Delete
                    </button>
                    @await Html.PartialAsync("Delete", person)
                    <button class="btn btn-primary" data-toggle="modal" data-target=@("#Edit-"+person.Code) data-url="@Url.Action($"Edit/{person.Code}")">
                       Edit
                    </button>
                    @await Html.PartialAsync("Edit",person)
                    <button class="btn btn-outline-success" data-toggle="modal" data-target=@("#View-" + person.Code) data-url="@Url.Action($"View/{person.Code}")">
                        View
                    </button>
                    @await Html.PartialAsync("View", person)
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <!-- Previous Button -->
        <li class="page-item @(ViewBag.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(ViewBag.PageNumber - 1)">Previous</a>
        </li>

        <!-- Page Numbers -->
        @for (int i = 1; i <= Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize); i++)
        {
            <li class="page-item @(i == ViewBag.PageNumber ? "active" : "")">
                <a class="page-link" href="?pageNumber=@i">@i</a>
            </li>
        }

        <!-- Next Button -->
        <li class="page-item @((ViewBag.PageNumber * ViewBag.PageSize >= ViewBag.TotalItems) ? "disabled" : "")">
            <a class="page-link" href="?pageNumber=@(ViewBag.PageNumber + 1)">Next</a>
        </li>
    </ul>
</nav>





